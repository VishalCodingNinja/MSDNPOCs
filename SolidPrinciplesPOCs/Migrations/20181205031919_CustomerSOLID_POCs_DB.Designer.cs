// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SolidPrinciplesPOCs;
using System;

namespace SolidPrinciplesPOCs.Migrations
{
    [DbContext(typeof(CustomersContext))]
    [Migration("20181205031919_CustomerSOLID_POCs_DB")]
    partial class CustomerSOLID_POCs_DB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SolidPrinciplesPOCs.CustomerPOCO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("TotalPurchase");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SolidPrinciplesPOCs.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerPOCOId");

                    b.Property<string>("ItemName");

                    b.Property<int>("Price");

                    b.HasKey("ItemId");

                    b.HasIndex("CustomerPOCOId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SolidPrinciplesPOCs.Item", b =>
                {
                    b.HasOne("SolidPrinciplesPOCs.CustomerPOCO")
                        .WithMany("Items")
                        .HasForeignKey("CustomerPOCOId");
                });
#pragma warning restore 612, 618
        }
    }
}
